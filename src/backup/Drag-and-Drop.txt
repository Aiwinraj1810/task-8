import React, { useState } from 'react';
import { CButton, CContainer, CFormInput } from '@coreui/react';
import axios from 'axios';
import uploadIcon from '../Assets/upload-img.png'

const DragandDrop = () => {
  const [image, setImage] = useState('');
  const [previewUrl, setPreviewUrl] = useState('');

  const uploadImage = () => {
    if (!image) {
      console.error("No image selected");
      return;
    }

    const formData = new FormData();
    formData.append("file", image);
    formData.append("upload_preset", "xckb82k7");
    formData.append("cloud_name", "dur23cis9");

    fetch("https://api.cloudinary.com/v1_1/dur23cis9/image/upload", {
      method: 'POST',
      body: formData
    })
      .then((res) => {
        if (!res.ok) {
          throw new Error("Failed to upload image");
        }
        return res.json();
      })
      .then((data) => {
        if (data && data.secure_url) {
          console.log("Secure URL:", data.secure_url);
          alert('Image uploaded');
          postUrlToEndpoint(data.secure_url); // Post URL to endpoint
        } else {
          throw new Error("Secure URL not found in response");
        }
      })
      .catch((error) => {
        console.error("Error uploading image:", error);
      });
  };

  const handleFileChange = (e) => {
    const selectedImage = e.target.files[0];
    setImage(selectedImage);
    setPreviewUrl(URL.createObjectURL(selectedImage));
  };

  const handleRemoveImage = () => {
    setImage('');
    setPreviewUrl('');
  };

  const handleDrop = (e) => {
    e.preventDefault();
    const file = e.dataTransfer.files[0];
    setImage(file);
    setPreviewUrl(URL.createObjectURL(file));
  };

  const handleDragOver = (e) => {
    e.preventDefault();
  };

  const postUrlToEndpoint = (url) => {
    axios.post('http://localhost:3031/imageDetails', { imageUrl: url })
      .then(response => {
        console.log('URL posted to endpoint:', response.data);
      })
      .catch(error => {
        console.error('Error posting URL to endpoint:', error);
      });
  };

  return (
    <CContainer
      onDrop={handleDrop}
      onDragOver={handleDragOver}
      style={{ border: '2px dashed #aaa', padding: '20px', borderRadius: '5px' }}
    >
      <CContainer style={{display:'flex', flexDirection:'column', alignItems:'center'}}>

      <h4>Drag and drop or choose file :</h4>
      <div className="img-space" style={{width:100, objectFit:'contain'}}>

      <img src={uploadIcon} alt='uploadIcon' />
      </div>
      </CContainer>
      <CFormInput  type='file' onChange={handleFileChange} />
      {previewUrl && (
        <CContainer style={{ marginTop: 10 }}>
          <img src={previewUrl} alt='preview' style={{ width: 100 }} />
          <CButton onClick={uploadImage}>Upload</CButton>
          <CButton onClick={handleRemoveImage}>Remove</CButton>
        </CContainer>
      )}
    </CContainer>
  );
};

export default DragandDrop;
